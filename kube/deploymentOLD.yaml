apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kube-go
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kube-go
  template:
    metadata:
      labels:
        app: kube-go
    spec:
      volumes:
      - name: logs-storage
        persistentVolumeClaim:
          claimName: go-test-pvc
      initContainers:
      - name: kube-go-init
        image: ssporyshev/wb_go_init:v1
        command: ['go', 'run', 'main.go']
        env:
          - name: "POD_IP"
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        volumeMounts:
          - mountPath: "/usr/src/app/logs"
            name: logs-storage
      containers:
      - name: kube-go
        image: ssporyshev/wb_go:v2
        volumeMounts:
        - mountPath: "/usr/src/app/logs"
          name: logs-storage
        ports:
        - containerPort: 4000
          protocol: TCP
        env:
        - name: "POD_IP"
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: "LOG_LEVEL"
          value: "PRODUCTION"
        - name: "DB_HOST"
          valueFrom:
            configMapKeyRef:
              name: go-config
              key: DB_HOST
        - name: "DB_PORT"
          valueFrom:
            configMapKeyRef:
              name: go-config
              key: DB_PORT
        - name: "DB_USER"
          valueFrom:
            configMapKeyRef:
              name: go-config
              key: DB_USER
        - name: "DB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: dbpass
              key: password
